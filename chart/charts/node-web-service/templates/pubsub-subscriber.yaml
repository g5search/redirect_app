{{ if .Values.subscriptions }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-pubsub-subscriber"
  labels:
    {{ include "helm-labels" . | nindent 4 }}
    app.kubernetes.io/component: pubsub-subscriber
  annotations:
    {{ include "reloader-annotation" . | indent 4 }}
spec:
  replicas: {{ .Values.pubsubSubscriber.replicas }}
  revisionHistoryLimit: 5
  strategy:
    {{ toYaml .Values.pubsubSubscriber.strategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/component: pubsub-subscriber
  template:
    metadata:
      name: pubsub-subscriber
      labels:
        app.kubernetes.io/component: pubsub-subscriber
        hasMetrics: {{ .Values.hasMetrics | quote }}
        {{ include "helm-labels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-logs-container: pubsub-subscriber
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        {{ if .Values.forceRestart }}
        restartForced: {{ randAlphaNum 5 | quote }}
        {{ end }}
    spec:
      enableServiceLinks: false
      serviceAccountName: {{ include "node-web-service.ksaName" . }}
      {{ if .Values.pubsubSubscriber.toleratesPreemptible }}
      tolerations:
      - key: {{ $.Values.preemptibleTaint }}
        operator: Equal
        value: "true"
        effect: NoSchedule
      {{ end }}
      affinity:
        {{ if .Values.pubsubSubscriber.toleratesPreemptible }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ $.Values.preemptibleTaint }}
                operator: In
                values:
                  - "true"
        {{ end }}
        # If somebody does increase the replica count, I'm going to assume it
        # was for availability reasons and they would want to spread the pods
        # around.
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Release.Name }}
              - key: tier
                operator: In
                values:
                - web-app
            topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | nindent 8 }}
      containers:
        - name: pubsub-subscriber
          image: {{ required "image.name is required" .Values.image.name }}:{{ required "image.tag is required" .Values.image.tag }}
          imagePullPolicy: Always
          command: [ "bundle", "exec", "rake", "g5_pub_sub:start_subscribers" ]
          resources:
            {{ toYaml .Values.pubsubSubscriber.resources | nindent 12 }}
          volumeMounts:
            {{ include "volume-mounts" . | nindent 12 }}
          env:
            - name: CONCURRENCY
              value: {{ mul (len .Values.subscriptions) .Values.pubsubSubscriber.perSubscriptionConcurrency | quote }}
            {{ include "common-vars" . | nindent 12 }}
            {{ if .Values.env }}
            {{ toYaml .Values.env | nindent 12 }}
            {{ end }}
        {{ if .Values.hasMetrics }}
        {{ include "prometheus-exporter-sidecar" $ | nindent 8 }}
        {{ end }}
      volumes:
        {{ include "volumes" . | nindent 8 }}
{{ end }}
