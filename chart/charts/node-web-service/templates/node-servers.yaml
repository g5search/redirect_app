apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-node-servers"
  labels:
    {{ include "helm-labels" . | nindent 4 }}
    app.kubernetes.io/component: web-app
  annotations:
    {{ include "reloader-annotation" . | indent 4 }}
spec:
  {{- include "validate-configuration" $ }}
  {{ $configuration := index .Values.configurations .Values.configuration -}}
  replicas: {{ .Values.replicaCount | default 2 }}
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "30%"
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/component: web-app
  template:
    metadata:
      name: node-server
      labels:
        app.kubernetes.io/component: web-app
        hasMetrics: {{ .Values.hasMetrics | quote }}
        {{ include "helm-labels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-logs-container: node-server
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        {{ if .Values.forceRestart }}
        restartForced: {{ randAlphaNum 5 | quote }}
        {{ end }}
    spec:
      #enableServiceLinks: false
      serviceAccountName: {{ include "node-web-service.ksaName" . }}
      {{ if .Values.toleratesPreemptible }}
      tolerations:
      - key: {{ $.Values.preemptibleTaint }}
        operator: Equal
        value: "true"
        effect: NoSchedule
      {{ end }}
      affinity:
        {{ if .Values.toleratesPreemptible }}
        nodeAffinity:
          {{ if .Values.requiresPreemptible }}
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ $.Values.preemptibleTaint }}
                operator: In
                values:
                  - "true"
          {{ else }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                - key: {{ $.Values.preemptibleTaint }}
                  operator: In
                  values:
                    - "true"
          {{ end }}
        {{ end }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Release.Name }}
              - key: app.kubernetes.io/component
                operator: In
                values:
                - web-app
            topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | nindent 8 }}
      containers:
        - name: node-server
          ports:
            - name: http
              containerPort: 8085
          {{ if not .Values.disableHealthChecking }}
          livenessProbe:
            httpGet:
              path: /okcomputer
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 10
            failureThreshold: 6
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /okcomputer
              port: http
            {{ if .Values.customReadinessTimeout }}
            initialDelaySeconds: {{ .Values.customReadinessTimeout | default 15 }}
            {{ else }}
            initialDelaySeconds: 15
            {{ end }}
            timeoutSeconds: 10
            failureThreshold: 6
            periodSeconds: 10
          {{ end }}
          image: {{ required "image.name is required" .Values.image.name }}:{{ required "image.tag is required" .Values.image.tag }}
          imagePullPolicy: Always
          command:
            {{ toYaml .Values.command | nindent 12 }}
          resources:
            {{ required "Values.resources required" (toYaml .Values.resources) | nindent 12 }}
            #volumeMounts:
            #{{ include "volume-mounts" . | nindent 12 }}
            #- name: config
            # mountPath: /app/config/k8s
          env:
            {{ include "common-vars" . | nindent 12 }}
            {{ if .Values.env }}
            {{ toYaml .Values.env | nindent 12 }}
            {{ end }}
